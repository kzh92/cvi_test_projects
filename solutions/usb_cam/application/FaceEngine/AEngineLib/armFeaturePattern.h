#ifndef _ARMFEATUREPATTERN_H_
#define _ARMFEATUREPATTERN_H_

#include <stdio.h>
#include "armCommon.h"

#ifndef __EMULATOR_MODE__
static float ganConstDicE[258] = 
{
	0.000123410f , 0.000141966f , 0.000163133f , 0.000187249f , 0.000214696f , 0.000245895f , 0.000281318f , 0.000321491f , 0.000366997f , 0.000418485f , 0.000476672f , 0.000542354f , 0.000616408f , 0.000699805f , 0.000793612f , 0.000899006f , 0.001017278f , 0.001149846f , 0.001298262f , 0.001464226f , 
	0.001649593f , 0.001856386f , 0.002086809f , 0.002343257f , 0.002628331f , 0.002944849f , 0.003295861f , 0.003684661f , 0.004114804f , 0.004590115f , 0.005114709f , 0.005692999f , 0.006329715f , 0.007029916f , 0.007799000f , 0.008642723f , 0.009567206f , 0.010578949f , 0.011684841f , 0.012892168f , 
	0.014208623f , 0.015642310f , 0.017201750f , 0.018895887f , 0.020734079f , 0.022726111f , 0.024882177f , 0.027212879f , 0.029729215f , 0.032442573f , 0.035364702f , 0.038507704f , 0.041883994f , 0.045506287f , 0.049387563f , 0.053541023f , 0.057980053f , 0.062718175f , 0.067768998f , 0.073146179f , 
	0.078863315f , 0.084933951f , 0.091371447f , 0.098188929f , 0.105399229f , 0.113014765f , 0.121047497f , 0.129508808f , 0.138409436f , 0.147759333f , 0.157567650f , 0.167842537f , 0.178591132f , 0.189819410f , 0.201532096f , 0.213732556f , 0.226422727f , 0.239602983f , 0.253272057f , 0.267426997f , 
	0.282062948f , 0.297173262f , 0.312749267f , 0.328780234f , 0.345253438f , 0.362153888f , 0.379464537f , 0.397166014f , 0.415236831f , 0.433653146f , 0.452388972f , 0.471416086f , 0.490704060f , 0.510220349f , 0.529930294f , 0.549797297f , 0.569782853f , 0.589846432f , 0.609946072f , 0.630038023f , 
	0.650077283f , 0.670017362f , 0.689810812f , 0.709409237f , 0.728763342f , 0.747823417f , 0.766539454f , 0.784861088f , 0.802738249f , 0.820121109f , 0.836960375f , 0.853207529f , 0.868815064f , 0.883736610f , 0.897927463f , 0.911344349f , 0.923946083f , 0.935693502f , 0.946549833f , 0.956480742f , 
	0.965454578f , 0.973442495f , 0.980418861f , 0.986360967f , 0.991249442f , 0.995068371f , 0.997805119f , 0.999450862f , 1.000000000f , 0.999450862f , 0.997805119f , 0.995068371f , 0.991249442f , 0.986360967f , 0.980418861f , 0.973442495f , 0.965454578f , 0.956480742f , 0.946549833f , 0.935693502f , 
	0.923946083f , 0.911344349f , 0.897927463f , 0.883736610f , 0.868815064f , 0.853207529f , 0.836960375f , 0.820121109f , 0.802738249f , 0.784861088f , 0.766539454f , 0.747823417f , 0.728763342f , 0.709409237f , 0.689810812f , 0.670017362f , 0.650077283f , 0.630038023f , 0.609946072f , 0.589846432f , 
	0.569782853f , 0.549797297f , 0.529930294f , 0.510220349f , 0.490704060f , 0.471416086f , 0.452388972f , 0.433653146f , 0.415236831f , 0.397166014f , 0.379464537f , 0.362153888f , 0.345253438f , 0.328780234f , 0.312749267f , 0.297173262f , 0.282062948f , 0.267426997f , 0.253272057f , 0.239602983f , 
	0.226422727f , 0.213732556f , 0.201532096f , 0.189819410f , 0.178591132f , 0.167842537f , 0.157567650f , 0.147759333f , 0.138409436f , 0.129508808f , 0.121047497f , 0.113014765f , 0.105399229f , 0.098188929f , 0.091371447f , 0.084933951f , 0.078863315f , 0.073146179f , 0.067768998f , 0.062718175f , 
	0.057980053f , 0.053541023f , 0.049387563f , 0.045506287f , 0.041883994f , 0.038507704f , 0.035364702f , 0.032442573f , 0.029729215f , 0.027212879f , 0.024882177f , 0.022726111f , 0.020734079f , 0.018895887f , 0.017201750f , 0.015642310f , 0.014208623f , 0.012892168f , 0.011684841f , 0.010578949f , 
	0.009567206f , 0.008642723f , 0.007799000f , 0.007029916f , 0.006329715f , 0.005692999f , 0.005114709f , 0.004590115f , 0.004114804f , 0.003684661f , 0.003295861f , 0.002944849f , 0.002628331f , 0.002343257f , 0.002086809f , 0.001856386f , 0.001649593f , 0.001464226f , 0.001298262f , 0.001149846f , 
	0.001017278f , 0.000899006f , 0.000793612f , 0.000699805f , 0.000616408f , 0.000542354f , 0.000476672f , 0.000418485f , 0.000366997f , 0.000321491f , 0.000281318f , 0.000245895f , 0.000214696f , 0.000187249f , 0.000163133f , 0.000141966f , 0.000123410f , 0.000000000f
};

static float ganConstDicA[256] = 
{
	0.000000000f , 0.024541229f , 0.049067672f , 0.073564567f , 0.098017141f , 0.122410677f , 0.146730468f , 0.170961887f , 0.195090324f , 0.219101235f , 0.242980182f , 0.266712755f , 0.290284663f , 0.313681751f , 0.336889863f , 0.359895051f , 0.382683426f , 0.405241311f , 0.427555084f , 
	0.449611336f , 0.471396744f , 0.492898196f , 0.514102757f , 0.534997642f , 0.555570245f , 0.575808167f , 0.595699310f , 0.615231574f , 0.634393275f , 0.653172851f , 0.671558976f , 0.689540565f , 0.707106769f , 0.724247098f , 0.740951121f , 0.757208824f , 0.773010433f , 0.788346410f , 0.803207517f , 
	0.817584813f , 0.831469595f , 0.844853580f , 0.857728601f , 0.870086968f , 0.881921291f , 0.893224299f , 0.903989315f , 0.914209783f , 0.923879504f , 0.932992816f , 0.941544056f , 0.949528158f , 0.956940353f , 0.963776052f , 0.970031261f , 0.975702107f , 0.980785251f , 0.985277653f , 0.989176512f , 
	0.992479563f , 0.995184720f , 0.997290432f , 0.998795450f , 0.999698818f , 1.000000000f , 0.999698818f , 0.998795450f , 0.997290432f , 0.995184720f , 0.992479563f , 0.989176512f , 0.985277653f , 0.980785251f , 0.975702107f , 0.970031261f , 0.963776052f , 0.956940353f , 0.949528158f , 0.941544056f , 
	0.932992816f , 0.923879504f , 0.914209783f , 0.903989315f , 0.893224299f , 0.881921291f , 0.870086968f , 0.857728601f , 0.844853580f , 0.831469595f , 0.817584813f , 0.803207517f , 0.788346410f , 0.773010433f , 0.757208824f , 0.740951121f , 0.724247098f , 0.707106769f , 0.689540565f , 0.671558976f , 
	0.653172851f , 0.634393275f , 0.615231574f , 0.595699310f , 0.575808167f , 0.555570245f , 0.534997642f , 0.514102757f , 0.492898196f , 0.471396744f , 0.449611336f , 0.427555084f , 0.405241311f , 0.382683426f , 0.359895051f , 0.336889863f , 0.313681751f , 0.290284663f , 0.266712755f , 0.242980182f , 
	0.219101235f , 0.195090324f , 0.170961887f , 0.146730468f , 0.122410677f , 0.098017141f , 0.073564567f , 0.049067672f , 0.024541229f , 0.000000000f , -0.024541229f , -0.049067672f , -0.073564567f , -0.098017141f , -0.122410677f , -0.146730468f , -0.170961887f , -0.195090324f , -0.219101235f , -0.242980182f , 
	-0.266712755f , -0.290284663f , -0.313681751f , -0.336889863f , -0.359895051f , -0.382683426f , -0.405241311f , -0.427555084f , -0.449611336f , -0.471396744f , -0.492898196f , -0.514102757f , -0.534997642f , -0.555570245f , -0.575808167f , -0.595699310f , -0.615231574f , -0.634393275f , -0.653172851f , -0.671558976f , 
	-0.689540565f , -0.707106769f , -0.724247098f , -0.740951121f , -0.757208824f , -0.773010433f , -0.788346410f , -0.803207517f , -0.817584813f , -0.831469595f , -0.844853580f , -0.857728601f , -0.870086968f , -0.881921291f , -0.893224299f , -0.903989315f , -0.914209783f , -0.923879504f , -0.932992816f , -0.941544056f , 
	-0.949528158f , -0.956940353f , -0.963776052f , -0.970031261f , -0.975702107f , -0.980785251f , -0.985277653f , -0.989176512f , -0.992479563f , -0.995184720f , -0.997290432f , -0.998795450f , -0.999698818f , -1.000000000f , -0.999698818f , -0.998795450f , -0.997290432f , -0.995184720f , -0.992479563f , -0.989176512f , 
	-0.985277653f , -0.980785251f , -0.975702107f , -0.970031261f , -0.963776052f , -0.956940353f , -0.949528158f , -0.941544056f , -0.932992816f , -0.923879504f , -0.914209783f , -0.903989315f , -0.893224299f , -0.881921291f , -0.870086968f , -0.857728601f , -0.844853580f , -0.831469595f , -0.817584813f , -0.803207517f , 
	-0.788346410f , -0.773010433f , -0.757208824f , -0.740951121f , -0.724247098f , -0.707106769f , -0.689540565f , -0.671558976f , -0.653172851f , -0.634393275f , -0.615231574f , -0.595699310f , -0.575808167f , -0.555570245f , -0.534997642f , -0.514102757f , -0.492898196f , -0.471396744f , -0.449611336f , -0.427555084f , 
	-0.405241311f , -0.382683426f , -0.359895051f , -0.336889863f , -0.313681751f , -0.290284663f , -0.266712755f , -0.242980182f , -0.219101235f , -0.195090324f , -0.170961887f , -0.146730468f , -0.122410677f , -0.098017141f , -0.073564567f , -0.049067672f , -0.024541229f
};

static int ganIntConstDicE[258] = 
{
	8 , 9 , 10 , 12 , 14 , 16 , 18 , 21 , 24 , 27 , 31 , 35 , 40 , 45 , 52 , 58 , 66 , 75 , 85 , 95 , 108 , 121 , 136 , 153 , 172 , 192 , 215 , 241 , 269 , 300 , 335 , 373 , 414 , 460 , 511 , 566 , 626 , 693 , 765 , 844 , 931 , 1025 , 1127 , 1238 , 1358 , 1489 , 1630 , 1783 , 1948 , 
		2126 , 2317 , 2523 , 2744 , 2982 , 3236 , 3508 , 3799 , 4110 , 4441 , 4793 , 5168 , 5566 , 5988 , 6434 , 6907 , 7406 , 7932 , 8487 , 9070 , 9683 , 10326 , 10999 , 11704 , 12440 , 13207 , 
		14007 , 14838 , 15702 , 16598 , 17526 , 18485 , 19475 , 20496 , 21546 , 22626 , 23734 , 24868 , 26028 , 27212 , 28419 , 29647 , 30894 , 32158 , 33437 , 34729 , 36031 , 
		37341 , 38656 , 39973 , 41290 , 42603 , 43910 , 45207 , 46491 , 47760 , 49009 , 50235 , 51436 , 52608 , 53747 , 54851 , 55915 , 56938 , 57916 , 58846 , 59725 , 60551 , 
		61321 , 62033 , 62683 , 63272 , 63795 , 64252 , 64642 , 64962 , 65212 , 65392 , 65500 , 65536 , 65500 , 65392 , 65212 , 64962 , 64642 , 64252 , 63795 , 63272 , 62683 , 
		62033 , 61321 , 60551 , 59725 , 58846 , 57916 , 56938 , 55915 , 54851 , 53747 , 52608 , 51436 , 50235 , 49009 , 47760 , 46491 , 45207 , 43910 , 42603 , 41290 , 39973 , 
		38656 , 37341 , 36031 , 34729 , 33437 , 32158 , 30894 , 29647 , 28419 , 27212 , 26028 , 24868 , 23734 , 22626 , 21546 , 20496 , 19475 , 18485 , 17526 , 16598 , 15702 , 
		14838 , 14007 , 13207 , 12440 , 11704 , 10999 , 10326 , 9683 , 9070 , 8487 , 7932 , 7406 , 6907 , 6434 , 5988 , 5566 , 5168 , 4793 , 4441 , 4110 , 3799 , 3508 , 3236 , 2982 , 2744 , 
		2523 , 2317 , 2126 , 1948 , 1783 , 1630 , 1489 , 1358 , 1238 , 1127 , 1025 , 931 , 844 , 765 , 693 , 626 , 566 , 511 , 460 , 414 , 373 , 335 , 300 , 269 , 241 , 215 , 192 , 172 , 153 , 136 , 121 , 108 , 95 , 85 , 75 , 66 , 58 , 52 , 
		45 , 40 , 35 , 31 , 27 , 24 , 21 , 18 , 16 , 14 , 12 , 10 , 9 , 8 , 0
};

static int ganIntConstDicA[256] = 
{
	0 , 1608 , 3215 , 4821 , 6423 , 8022 , 9616 , 11204 , 12785 , 14359 , 15923 , 17479 , 19024 , 20557 , 22078 , 23586 , 25079 , 26557 , 28020 , 29465 , 30893 , 32302 , 33692 , 
		35061 , 36409 , 37736 , 39039 , 40319 , 41575 , 42806 , 44011 , 45189 , 46340 , 47464 , 48558 , 49624 , 50660 , 51665 , 52639 , 53581 , 54491 , 55368 , 56212 , 57022 , 
		57797 , 58538 , 59243 , 59913 , 60547 , 61144 , 61705 , 62228 , 62714 , 63162 , 63571 , 63943 , 64276 , 64571 , 64826 , 65043 , 65220 , 65358 , 65457 , 65516 , 65536 , 
		65516 , 65457 , 65358 , 65220 , 65043 , 64826 , 64571 , 64276 , 63943 , 63571 , 63162 , 62714 , 62228 , 61705 , 61144 , 60547 , 59913 , 59243 , 58538 , 57797 , 57022 , 
		56212 , 55368 , 54491 , 53581 , 52639 , 51665 , 50660 , 49624 , 48558 , 47464 , 46340 , 45189 , 44011 , 42806 , 41575 , 40319 , 39039 , 37736 , 36409 , 35061 , 33692 , 
		32302 , 30893 , 29465 , 28020 , 26557 , 25079 , 23586 , 22078 , 20557 , 19024 , 17479 , 15923 , 14359 , 12785 , 11204 , 9616 , 8022 , 6423 , 4821 , 3215 , 1608 , 0 , -1608 , 
		-3215 , -4821 , -6423 , -8022 , -9616 , -11204 , -12785 , -14359 , -15923 , -17479 , -19024 , -20557 , -22078 , -23586 , -25079 , -26557 , -28020 , -29465 , 
		-30893 , -32302 , -33692 , -35061 , -36409 , -37736 , -39039 , -40319 , -41575 , -42806 , -44011 , -45189 , -46340 , -47464 , -48558 , -49624 , -50660 , 
		-51665 , -52639 , -53581 , -54491 , -55368 , -56212 , -57022 , -57797 , -58538 , -59243 , -59913 , -60547 , -61144 , -61705 , -62228 , -62714 , -63162 , 
		-63571 , -63943 , -64276 , -64571 , -64826 , -65043 , -65220 , -65358 , -65457 , -65516 , -65536 , -65516 , -65457 , -65358 , -65220 , -65043 , -64826 , 
		-64571 , -64276 , -63943 , -63571 , -63162 , -62714 , -62228 , -61705 , -61144 , -60547 , -59913 , -59243 , -58538 , -57797 , -57022 , -56212 , -55368 , 
		-54491 , -53581 , -52639 , -51665 , -50660 , -49624 , -48558 , -47464 , -46340 , -45189 , -44011 , -42806 , -41575 , -40319 , -39039 , -37736 , -36409 , 
		-35061 , -33692 , -32302 , -30893 , -29465 , -28020 , -26557 , -25079 , -23586 , -22078 , -20557 , -19024 , -17479 , -15923 , -14359 , -12785 , -11204 , 
		-9616 , -8022 , -6423 , -4821 , -3215 , -1608
};
#ifdef __cplusplus
extern	"C"
{
#endif

__inline int ProcessByCCompactRectPattern(int* pnIntImage, ARM_COMPACT_RECT_PATTERN* pxCompactRectPattern, int nImageWidth);
//// LoadDictionary ////
int IsMinuteByCWavePatternProperty( ARM_WAVEPATTERN_PROPERTY* psWavePatternProperty, float rPan, float rThreshold);
int LoadDictionaryByWavePatternProperty(ARM_WAVEPATTERN_PROPERTY* psWavePatternProperty, int nMatchKind, int idx_Match);
int CoarseMatchByCCompactRectPattern(ARM_FeaturePattern* psCompactRectPattern, ARM_MatchInfo* pMatchInfo, float rDist, ARM_MatchResult* pcMatchResult, int nFilterNo, float rDeltaClassifierThreshold);
int CoarseMatchByCCompactQuadPattern(ARM_FeaturePattern* psCompactQuadPattern, ARM_MatchInfo* pMatchInfo, float rDist, ARM_MatchResult* pcMatchResult, int nFilterNo, float rDeltaClassifierThreshold);
int	CoarseMatchByCCompactWavePattern(ARM_FeaturePattern *psCompactWavePattern, ARM_MatchInfo* pMatchInfo, float rDist, ARM_MatchResult* arg_8, int nFilterNo, float rDeltaClassifierThreshold);
int	MinuteMacthByCCompactRectPattern(ARM_FeaturePattern* psCompactRectPattern, ARM_MatchInfo* pMatchInfo, ARM_MatchResult* pcMatchResult, int nFilterNo, float rDeltaClassifierThreshold);
int MinuteMacthByCCompactQuadPattern(ARM_FeaturePattern* psCompactQuadPattern, ARM_MatchInfo* pMatchInfo, ARM_MatchResult* pcMatchResult, int nFilterNo, float rDeltaClassifierThreshold);
int	MinuteMacthByCCompactWavePattern(ARM_FeaturePattern *psCompactWavePattern, ARM_MatchInfo* pMatchInfo, ARM_MatchResult* pcMatchResult, int nFilterNo, float rDeltaClassifierThreshold);
__inline float ProcessByCCompactQuadPattern( int* pnIntImage, INT64* pnPowIntImage, int nImageWidth, float arg_C, ARM_COMPACT_QUAD_PATTERN* pxCompactQuadPattern );
__inline float ProcessByCCompactWavePattern(ARM_COMPACT_WAVE_PATTERN* pWavePattern, int* pnIntImage, INT64* pdwSqrIntImage, int nIntImageWidth, int nCols, float rMinVariance, float param_14);

int IsMinuteByCWavePatternProperty_Fix( ARM_WAVEPATTERN_PROPERTY* psWavePatternProperty, float rPan, int nThreshold);
int LoadDictionaryByWavePatternProperty_Fix(ARM_WAVEPATTERN_PROPERTY* psWavePatternProperty, int nMatchKind, int idx_Match);
int CoarseMatchByCCompactRectPattern_Fix( ARM_FeaturePattern* psCompactRectPattern, ARM_MatchInfo* pMatchInfo, int arg_0_rUnk, ARM_MatchResult* pcMatchResult, int nFilterNo );
int CoarseMatchByCCompactQuadPattern_Fix( ARM_FeaturePattern* psCompactQuadPattern, ARM_MatchInfo* pMatchInfo, int arg_0_rUnk, ARM_MatchResult* pcMatchResult, int nFilterNo );
int	CoarseMatchByCCompactWavePattern_Fix( ARM_FeaturePattern *psCompactWavePattern, ARM_MatchInfo* pMatchInfo, int arg_0_rUnk, ARM_MatchResult* arg_8, int nFilterNo );
int	MinuteMacthByCCompactRectPattern_Fix( ARM_FeaturePattern* psCompactRectPattern, ARM_MatchInfo* pMatchInfo, ARM_MatchResult* pcMatchResult, int nFilterNo );
int MinuteMacthByCCompactQuadPattern_Fix(ARM_FeaturePattern* psCompactQuadPattern, ARM_MatchInfo* pMatchInfo, ARM_MatchResult* pcMatchResult, int nFilterNo );
int	MinuteMacthByCCompactWavePattern_Fix( ARM_FeaturePattern *psCompactWavePattern, ARM_MatchInfo* pMatchInfo, ARM_MatchResult* pcMatchResult, int nFilterNo );
int ProcessByCCompactQuadPattern_Fix( int* pnIntImage, INT64* pnPowIntImage, int nImageWidth, int arg_C, ARM_COMPACT_QUAD_PATTERN* pxCompactQuadPattern );
int ProcessByCCompactWavePattern_Fix( ARM_COMPACT_WAVE_PATTERN* pWavePattern, int* pnIntImage, INT64* pdwSqrIntImage, int nIntImageWidth, int nCols, int rMinVariance, int param_14 );

#ifdef __cplusplus
}
#endif

#endif

#endif
