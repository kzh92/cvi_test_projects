## 第一部分： 基础信息
name: cvi_tdl                                   # <必选项> 包名称 （符合C语言变量命名规则），长度少于等于64字节
version: v0.0.1                                     # <必选项> 组件版本号
description: Cvitek turnkey deep learning SDK library.   # <必选项> 建议至少20字以上
type: common                                        # <必选项> 组件类型，为：solution, chip, board, common, sdk
tag: 核心模块                                        # <可选项> 组件分类，缺省值： ''
keywords:                                           # <可选项> 标签，会影响到组件被搜索的效果，合理的标签很重要
  - base
license: Copyright (C) Cvitek Co., Ltd. 2019-2020. All rights reserved. # <可选项> 源代码的许可证，要确保所有代码、文件的许可证不冲突。如：MIT，Apache license v2.0，BSD

## 第二部分：依赖信息
#           指定该组件依赖的组件及版本
# sdk_chip:                                # <可选项> 该组件依赖sdk组件，合理的依赖才能保证组件能编译、使用
#   - sdk_chip_csky_dummy: v7.4.0
#   - sdk_chip_riscv_dummy: v7.4.0
depends:
  - csi_cv: develop

## 第三部分：板级信息
# hw_info:                                 # 对 solution、board、chip 三个字段的改进，统称为 hw_info 字段
#hw_info:
#  arch_name: arm
#  cpu_name: cortex-a53
#  vendor_name: cvitek
#  ld_script: gcc_csky.ld
#  toolchain_prefix: aarch64-none-elf
# flash_program: d1_flash.elf

## 第四部分：编译连接信息
# build_config:                            # <可选项> 编译配置项
#   include:                               # <可选项> 编译时，影响编译器的-I 参数 ,全局有效
#     - src                                #        include 只能是该软件包下的目录，不能使用外部目录
#   internal_include:                      # <可选项> 编译时，影响编译器的-I 参数 ,组件内有效
#     - include
#   cflag: ''                              # <可选项> C 编译器所需要要的编译参数
#   cxxflag: ''                            # <可选项> CXX 编译器所需要要的编译参数
#   asmflag: ''                            # <可选项> 汇编器所需要要参数
#   define:                                # <可选项> 宏定义, 增加编译器的-D 选项,如：
#     XXX: 1                               #   -DXXX=1
#     AAA: 1                               #   -DAAA
#     STR: "abc"                           #   -DSTR="abc"
#   libs:                                  # 该组件中支持的二进制静态库,如：libxxx.a, libyyy.a
#     - xxx                                #   -lxxx
#     - yyy                                #   -lyyy
#   libpath:                               # 指定静态库所在的路径（相对于该组件路径）
#     - libs                               #   -Llibs
build_config:
  cflag: '-Wno-error'
  # cxxflag: '-fsigned-char -fPIC -Werror=all -fdiagnostics-color=always -std=gnu++11 -O3'
  cxxflag: '-Wno-error'
  include:
    - cviai/include
    - cviai/include/core
    - cviai/include/core/utils
    - cviai/include/cvi_tdl_app

  internal_include:
    - 3rd_party/eigen-3.3.7/include/eigen3

    - ./ # version.hpp

    - cviai/modules/app/face_cap_utils
    - cviai/modules/app/face_capture
    - cviai/modules/app/person_capture
    - cviai/modules/app/personvehicle_capture
    - cviai/modules/app/vehicle_adas

    - cviai/modules/core
    - cviai/modules/core/core
    - cviai/modules/core/utils
    - cviai/modules/core/ive

    - cviai/modules/core/deepsort
    - cviai/modules/core/face_attribute
    - cviai/modules/core/face_detection/retina_face
    - cviai/modules/core/lane_detection
    - cviai/modules/core/lane_detection/lstr
    - cviai/modules/core/liveness/ir_liveness
    - cviai/modules/core/motion_detection
    - cviai/modules/core/object_detection/mobiledetv2
    - cviai/modules/core/object_detection/ppyoloe
    - cviai/modules/core/object_detection/yolo
    - cviai/modules/core/object_detection/yolov3
    - cviai/modules/core/object_detection/yolov5
    - cviai/modules/core/object_detection/yolov6
    - cviai/modules/core/object_detection/yolov8
    - cviai/modules/core/object_detection/yolov10
    - cviai/modules/core/object_detection/yolox
    - cviai/modules/core/sound_classification

    - cviai/modules/service/area_detect
    - cviai/modules/service/digital_tracking
    - cviai/modules/service/draw_rect
    - cviai/modules/service/feature_matching
    - cviai/modules/service/tracker

  libpath:
    # - lib
  libs:
    # - libcvi_tdl_app.so
    # - libcvi_tdl.so


# source_file:                             # <可选项> 指定参与编译的源代码文件，支持通配符，采用相对路径
#   - src/*.c                              # 例：组件 src 目录下所有的扩展名为 c 的源代码文件
source_file:
  - cviai/modules/app/*.c
  - cviai/modules/app/face_cap_utils/*.c
  - cviai/modules/app/face_capture/*.c
  - cviai/modules/app/person_capture/*.c
  - cviai/modules/app/personvehicle_capture/*.c
  - cviai/modules/app/vehicle_adas/*.c

  - cviai/modules/core/cvi_tdl_core.cpp
  - cviai/modules/core/cvi_tdl_rescale_bbox.cpp
  - cviai/modules/core/cvi_tdl_types_mem.cpp
  - cviai/modules/core/cvi_tdl_utils.cpp

  - cviai/modules/core/utils/ccl.cpp
  - cviai/modules/core/utils/core_utils.cpp
  - cviai/modules/core/utils/demangle.cpp
  - cviai/modules/core/utils/img_process.cpp
  - cviai/modules/core/utils/img_warp.cpp
  - cviai/modules/core/utils/object_utils.cpp
  - cviai/modules/core/utils/profiler.cpp
  - cviai/modules/core/utils/rescale_utils.cpp
  - cviai/modules/core/core/core.cpp
  - cviai/modules/core/core/face_detection.cpp
  - cviai/modules/core/core/obj_detection.cpp
  - cviai/modules/core/core/pose_detection.cpp
  - cviai/modules/core/core/vpss_engine.cpp
  - cviai/modules/core/ive/ive.cpp

  - cviai/modules/core/deepsort/*.cpp
  - cviai/modules/core/face_attribute/*.cpp
  - cviai/modules/core/face_detection/retina_face/*.cpp
  - cviai/modules/core/lane_detection/*.cpp
  - cviai/modules/core/lane_detection/lstr/*.cpp
  - cviai/modules/core/liveness/ir_liveness/*.cpp
  - cviai/modules/core/motion_detection/*.cpp
  - cviai/modules/core/object_detection/mobiledetv2/*.cpp
  - cviai/modules/core/object_detection/ppyoloe/*.cpp
  - cviai/modules/core/object_detection/yolo/*.cpp
  - cviai/modules/core/object_detection/yolov3/*.cpp
  - cviai/modules/core/object_detection/yolov5/*.cpp
  - cviai/modules/core/object_detection/yolov6/*.cpp
  - cviai/modules/core/object_detection/yolov8/*.cpp
  - cviai/modules/core/object_detection/yolov10/*.cpp
  - cviai/modules/core/object_detection/yolox/*.cpp
  - cviai/modules/core/sound_classification/*.cpp

  - cviai/modules/service/*.cpp
  - cviai/modules/service/area_detect/*.cpp
  - cviai/modules/service/digital_tracking/*.cpp
  - cviai/modules/service/draw_rect/*.cpp
  - cviai/modules/service/feature_matching/*.cpp
  - cviai/modules/service/tracker/*.cpp

## 第五部分：配置信息
def_config:
    NO_OPENCV: 1
    CONFIG_ALIOS: y                             # 组件的可配置项
#   CONFIG_DEBUG: y
#   CONFIG_PARAM_NOT_CHECK: y
#   CONFIG_CLI: y

## 第六部分：安装信息
# install:
#   - dest: include/                       # 安装的目的路径 dest是相对路径，通常是相对于YoC SDK 安装目录
#     source:                              # 安装源列表
#      - src/*.h                           # 支持通配符，相对路径

## 第七部分：导出部分
# export:
#   - dest: "<SOLUTION_PATH>/generated/data" # 安装的目的路径 dest是相对路径
#     source:                                # 安装源列表
#       - "bootimgs/boot"
#       - "bootimgs/tee"
#       - "bootimgs/mtb"
#       - "configs/config.yaml"
