/*
 * Copyright (C) Cvitek Co., Ltd. 2019-2020. All rights reserved.
 */
#ifndef __CVI_RTC_PWR_H__
#define __CVI_RTC_PWR_H__

#ifdef BIT
#undef BIT
#define BIT(n) (1UL << (n))
#else
#define BIT(n) (1UL << (n))
#endif

/* RTC */
#define RTC_SYS_BASE		0x05000000
#define RTC_CORE_SRAM_BASE	(RTC_SYS_BASE + 0x00026800)
#define RTC_CORE_SRAM_SIZE	0x0800 // 2KB

/* RTC MACRO reg */
#define RTC_MACRO_BASE		(RTC_SYS_BASE + 0x00026400)
#define RTC_PWR_DET_COMP	0x044
#define RTC_MACRO_DA_CLEAR_ALL	0x080
#define RTC_MACRO_DA_SET_ALL	0x084
#define RTC_MACRO_DA_LATCH_PASS	0x088
#define RTC_MACRO_DA_SOC_READY	0x08c
#define RTC_MACRO_PD_SLDO	0x090
#define RTC_MACRO_RG_DEFD	0x094
#define RTC_MACRO_RG_SET_T	0x098
#define RTC_MACRO_RO_CLK_STOP	0x0a0
#define RTC_MACRO_RO_DEFQ	0x0a4
#define RTC_MACRO_RO_T		0x0a8

/* RTC CTRL reg */
#define REG_RTC_CTRL_BASE	(RTC_SYS_BASE + 0x00025000)
#define RTC_CTRL_UNLOCKKEY	0X004
#define RTC_CTRL0		0X008
#define RTC_CTRL_STATUS0	0X00C
#define RTC_CTRL_STATUS1	0X010
#define RTC_CTRL_STATUS2GPIO	0X014
#define RTCSYS_RST_CTRL		0X018
#define RTCSYS_CLKMUX		0X01C
#define RTCSYS_MCU51_CTRL0	0X020
#define RTCSYS_MCU51_CTRL1	0X024
#define RTCSYS_PMU		0X028
#define RTCSYS_STATUS		0X02C
#define RTCSYS_CLKBYP		0X030
#define RTCSYS_CLK_EN		0X034
#define RTCSYS_WKUP_CTRL	0X038
#define RTCSYS_CLKDIV	0X03C
#define FC_COARSE_EN	0X040
#define FC_COARSE_CAL	0X044
#define FC_FINE_EN	0X048
#define FC_FINE_PERIOD	0X04C
#define FC_FINE_CAL	0X050
#define RTCSYS_PMU2	0X054
#define RTCSYS_CLKDIV1	0X058
#define RTCSYS_MCU51_DBG	0X05C
#define SW_REG0		0X060
#define SW_REG1_POR	0X064
#define FAB_LP_CTRL	0X068
#define FAB_OPTION	0X06C
#define RTCSYS_MCU51_ICTRL1	0X07C
#define RTC_IP_PWR_REQ		0X080
#define RTC_IP_ISO_CTRL		0X084
#define RTCSYS_SPARE_REG0	0X088
#define RTCSYS_SPARE_REG1	0X08C
#define RTCSYS_SPARE_RO		0X090
#define RTCSYS_WKUP_CTRL1	0X094
#define RTCSYS_SRAM_CTRL	0X098
#define RTCSYS_IO_CTRL		0X09C
#define RTCSYS_WDT_CTRL		0X0A0
#define RTCSYS_IRRX_CLK_CTRL	0X0A4
#define RTCSYS_RTC_WKUP_CTRL	0X0A8
#define RTCSYS_POR_RST_CTRL	0X0AC

/* RTC CORE REG */
#define REG_RTC_BASE		(RTC_SYS_BASE + 0x00026000)
#define RTC_ANA_CALIB		0x000
#define RTC_SEC_PULSE_GEN	0x004
#define RTC_ALARM_TIME		0x008
#define RTC_ALARM_ENABLE	0x00c
#define RTC_SET_SEC_CNTR_VALUE	0x010
#define RTC_SET_SEC_CNTR_TRIG	0x014
#define RTC_SEC_CNTR_VALUE	0x018
#define RTC_INFO0	0x01c
#define RTC_INFO1	0x020
#define RTC_INFO2	0x024
#define RTC_INFO3	0x028
#define RTC_NOPOR_INFO0	0x02c
#define RTC_NOPOR_INFO1	0x030
#define RTC_NOPOR_INFO2	0x034
#define RTC_NOPOR_INFO3	0x038
#define RTC_APB_RDATA_SEL	0x3c
#define RTC_DB_PWR_VBAT_DET	0x040
#define RTC_DB_BUTTON1	0x048
#define RTC_DB_PWR_ON	0x04c
#define RTC_7SEC_RESET	0x050
#define RTC_THM_SHDN_AUTO_REBOOT	0x064
#define RTC_POR_DB_MAGIC_KEY		0x068
#define RTC_DB_SEL_PWR	0x06c
#define RTC_UP_SEQ0	0x070
#define RTC_UP_SEQ1	0x074
#define RTC_UP_SEQ2	0x078
#define RTC_UP_SEQ3	0x07c
#define RTC_UP_IF_EN	0x080
#define RTC_UP_RSTN	0x084
#define RTC_UP_MAX	0x088
#define RTC_DN_SEQ0	0x090
#define RTC_DN_SEQ1	0x094
#define RTC_DN_SEQ2	0x098
#define RTC_DN_SEQ3	0x09c
#define RTC_DN_IF_EN	0x0a0
#define RTC_DN_RSTN	0x0a4
#define RTC_DN_MAX	0x0a8
#define RTC_PWR_CYC_MAX	0x0b0
#define RTC_WARM_RST_MAX	0x0b4
#define RTC_EN_7SEC_RST		0x0b8
#define RTC_EN_PWR_WAKEUP	0x0bc
#define RTC_EN_SHDN_REQ		0x0c0
#define RTC_EN_THM_SHDN		0x0c4
#define RTC_EN_PWR_CYC_REQ	0x0c8
#define RTC_EN_WARM_RST_REQ	0x0cc
#define RTC_EN_PWR_VBAT_DET	0x0d0
#define FSM_STATE		0x0d4
#define RTC_EN_WDG_RST_REQ	0x0e0
#define RTC_EN_SUSPEND_REQ	0x0e4
#define RTC_DB_REQ_WDG_RST	0x0e8
#define RTC_DB_REQ_SUSPEND	0x0ec
#define RTC_PG_REG		0x0f0
#define RTC_ST_ON_REASON	0x0f8
#define RTC_ST_OFF_REASON	0x0fc
#define RTC_EN_WAKEUP_REQ	0x120
#define RTC_PWR_WAKEUP_POLARITY	0x128
#define RTC_DB_SEL_REQ	0x130
#define RTC_PWR_DET_SEL	0x140

/* rtc pwr io reg */
#define REG_IOCTRL_PWR_WAKEUP0	0x90
#define REG_IOCTRL_PWR_WAKEUP1	0x94
#define REG_IOCTRL_PWR_BUTTON1	0x98
#define REG_IOCTRL_PWR_ON	0x9C

/* ioblk_GRTC */
#define REG_ioblk_GRTC_BASE	0x05027000
#define REG_CTRL_selphy_PWR_BUTTON1	0x84
#define REG_CTRL_selphy_PWR_ON		0x88
#define REG_CTRL_selphy_PWR_WAKEUP0	0x8C
#define REG_CTRL_selphy_PWR_WAKEUP1	0x90

// power wakup source
typedef enum {
	// wakup source
	RTC_EN_WAKEUP_PWR_WAKEUP0 = BIT(0),
	RTC_EN_WAKEUP_PWR_WAKEUP1 = BIT(1),
	RTC_EN_WAKEUP_PWR_ON = BIT(2),
	RTC_EN_WAKEUP_REQ_POWERUP = BIT(3),
	RTC_EN_WAKEUP_PWR_BUTTON1 = BIT(4),
	RTC_EN_WAKEUP_ALARM = BIT(5),
	RTC_EN_WAKEUP_REQ_WAKEUP = BIT(6),
	// power up source
	RTC_EN_PWRUP_PWR_WAKEUP0 = BIT(8),
	RTC_EN_PWRUP_PWR_WAKEUP1 = BIT(9),
	RTC_EN_PWRUP_PWR_ON = BIT(10),
	RTC_EN_PWRUP_REQ_POWERUP = BIT(11),
	RTC_EN_PWRUP_PWR_BUTTON1 = BIT(12),
	RTC_EN_PWRUP_ALARM = BIT(13),
	RTC_EN_PWRUP_REQ_WAKEUP = BIT(14)
} csi_wakeup_source_t;

extern void rtc_set_wakeup_source(csi_wakeup_source_t source);
extern void rtc_do_poweroff(void);

#endif
