
## 第一部分： 基础信息
name: fdk_aac                                       # <必选项> 包名称 （符合C语言变量命名规则），长度少于等于64字节
version: v7.3-dev
description: FDK-AAC是一个开源的MPEG-4和MPEG-2 AAC解码器 # <必选项> 建议至少20字以上
type: common                                        # <可选项> 组件类型，为：solution, chip, board, common，缺省值 common

tag: 多媒体播放器                                   # <可选项> 组件分类，缺省值： ''
keywords:                                           # <可选项> 标签，会影响到组件被搜索的效果，合理的标签很重要
  - fdk_aac
  - aac decoder
  - m4a
  - audio decoder
  - media
author:                                             # <可选项> 原作者信息

## 第二部分：依赖信息
#           指定该组件依赖的组件及版本，版本支持条件比较，支持：>=v1.0, >v1.0, ==v1.0, <=v1.0, <v1.0, v1.0
#           未指定条件时，默认为 ==，如 v1.0 与 ==v1.0
# depends:                                 # <可选项> 该组件依赖其他的组件，合理的依赖才能保证组件能编译、使用
#   - minilibc: v7.2.0
#   - aos: >=v7.2.0
depends:
  - csi: V7.3.0
  - rhino: V7.3.0
  - aos: V7.3.0

## 第四部分：编译连接信息
# build_config:                            # <可选项> 编译配置项
#   include:                               # <可选项> 编译时，影响编译器的-I 参数 ,全局有效
#     - src                                #        include 只能是该软件包下的目录，不能使用外部目录
#   internal_include:                      # <可选项> 编译时，影响编译器的-I 参数 ,组件内有效
#     - include
#   cflag: ''                              # <可选项> C 编译器所需要要的编译参数
#   cxxflag: ''                            # <可选项> CXX 编译器所需要要的编译参数
#   asmflag: ''                            # <可选项> 汇编器所需要要参数
#   define:                                # <可选项> 宏定义, 增加编译器的-D 选项,如：
#     XXX: 1                               #   -DXXX=1
#     AAA: 1                               #   -DAAA
#     STR: "abc"                           #   -DSTR="abc"
#   libs:                                  # 该组件中支持的二进制静态库,如：libxxx.a, libyyy.a
#     - xxx                                #   -lxxx
#     - yyy                                #   -lyyy
#   libpath:                               # 指定静态库所在的路径（相对于该组件路径）
#     - libs                               #   -Llibs
build_config:
  cflag: '-Wno-unused-function -Wno-array-bounds'
  cxxflag: '-Wno-unused-function -Wno-array-bounds'
  define:
    - PACKAGE_NAME=\"fdk_aac\"
    - PACKAGE_TARNAME=\"fdk_aac\"
    - PACKAGE_VERSION=\"2.0.1\"
    - PACKAGE_STRING=\"fdk_aac\ 2.0.1\"
    - PACKAGE=\"fdk_aac\"
    - VERSION=\"2.0.1\"
    - STDC_HEADERS=1
    - HAVE_SYS_TYPES_H=1
    - HAVE_SYS_STAT_H=1
    - HAVE_STDLIB_H=1
    - HAVE_STRING_H=1
    - HAVE_MEMORY_H=1
    - HAVE_STRINGS_H=1
    - HAVE_INTTYPES_H=1
    - HAVE_STDINT_H=1
    - HAVE_UNISTD_H=1
    - HAVE_DLFCN_H=0
    - SBRDEC_MAX_HB_FADE_FRAMES=0
    - FDK_MEM_OPT
    - FDK_CSKY_ASM
    - FDK_DEC_SBR_ENABLE
  include:
    - include
  internal_include:
    - include/fdk_aac
    - libArithCoding/include
    - libDRCdec/include
    - libSACdec/include
    - libSACenc/include
    - libSBRdec/include
    - libSBRenc/include
    - libMpegTPDec/include
    - libMpegTPEnc/include
    - libFDK/include
    - libPCMutils/include

  libs:
  libpath:
    - lib
## 第五部分：配置信息
# def_config:                              # 组件的可配置项
#   CONFIG_DEBUG: y
#   CONFIG_PARAM_NOT_CHECK: y
#   CONFIG_CLI: y

## 第六部分：安装信息
# install:
#   - dest: include/                       # 安装的目的路径 dest是相当路径，通常是相对于YoC SDK 安装目录
#     source:                              # 安装源列表
#      - src/*.h                           # 支持通配符，相对路径
install:
  - dest: "include"
    source:
      - "include/*"

## 第七部分：导出部分
# export:
#   - dest: "<SOLUTION_PATH>/generated/data" # 安装的目的路径 dest是相当路径
#     source:                                # 安装源列表
#       - "bootimgs/boot"
#       - "bootimgs/tee"
#       - "bootimgs/mtb"
#       - "configs/config.yaml"
